import{r as o,c as p,a as s,b as t,F as c,d as n,e,o as r}from"./app.260f48b5.js";import{_ as l}from"./plugin-vue_export-helper.5a098b48.js";const i={},u=s("h1",{id:"introduction",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),n(" Introduction")],-1),d=s("pre",null,[s("code",null,`npm install dataclass
`)],-1),k=s("p",null,"Syntax sugar that leverages the power of available type systems in TypeScript and JavaScript to provide an effortless way for defining value objects that are immutable and persistent.",-1),h=s("p",null,"Dataclass can be used in browsers, Node.js, and Deno.",-1),_=s("h2",{id:"prior-art",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#prior-art","aria-hidden":"true"},"#"),n(" Prior Art")],-1),m=s("p",null,"The implemented concept is heavily inspired by Scala and Kotlin. Both languages have the implementation of data classes as a part of their syntax and share similar APIs.",-1),g=n("See "),f={href:"https://kotlinlang.org/docs/reference/data-classes.html",target:"_blank",rel:"noopener noreferrer"},y=n("Data Classes"),b=n(" in Kotlin (also "),v={href:"https://docs.scala-lang.org/tour/case-classes.html",target:"_blank",rel:"noopener noreferrer"},q=n("Case Classes"),w=n(" in Scala):"),x=e(`<div class="language-kotlin ext-kt"><pre class="language-kotlin"><code><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">User</span><span class="token punctuation">(</span><span class="token keyword">val</span> name<span class="token operator">:</span> String <span class="token operator">=</span> <span class="token string">&quot;Anonymous&quot;</span><span class="token punctuation">,</span> <span class="token keyword">val</span> age<span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>

<span class="token keyword">val</span> user <span class="token operator">=</span> <span class="token function">User</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;Liza&quot;</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> updated <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;Ann&quot;</span><span class="token punctuation">)</span>

user<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>updated<span class="token punctuation">)</span>
</code></pre></div>`,1),S=n("And "),A={href:"https://docs.python.org/3/library/dataclasses.html",target:"_blank",rel:"noopener noreferrer"},C=n("Data Classes"),N=n(" in Python:"),j=e(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> dataclasses <span class="token keyword">import</span> dataclass<span class="token punctuation">,</span> replace

<span class="token decorator annotation punctuation">@dataclass</span>
<span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">:</span>
  name<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;Anonymous&quot;</span>
  age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span>

user <span class="token operator">=</span> User<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Liza&quot;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">)</span>
updated <span class="token operator">=</span> replace<span class="token punctuation">(</span>user<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;Ann&quot;</span><span class="token punctuation">)</span>

user <span class="token operator">==</span> updated
</code></pre></div>`,1);function B(D,L){const a=o("OutboundLink");return r(),p(c,null,[u,d,k,h,_,m,s("p",null,[g,s("a",f,[y,t(a)]),b,s("a",v,[q,t(a)]),w]),x,s("p",null,[S,s("a",A,[C,t(a)]),N]),j],64)}var I=l(i,[["render",B]]);export{I as default};
